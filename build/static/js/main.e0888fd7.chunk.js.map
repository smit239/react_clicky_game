{"version":3,"sources":["images/batman_1.jpg","images/blackpanther_1.jpg","images/captain_america1.jpg","images/captain_america2.jpg","images/captain_america3.png","images/captain_america4.jpg","images/hulk_1.jpg","images/ironman_1.png","images/ironman_2.jpg","images/ironman_3.jpg","images/ironman_4.jpg","images/spiderman_1.jpg","images/spiderman_2.jpg","images/thore_1.jpg","components/Navbar/Navbar.js","components/Character/Character.js","components/Container/Container.js","components/Footer/Footer.js","components/Banner/Banner.js","images.js","components/ClickyGame.js","index.js"],"names":["module","exports","Navbar","props","className","navMsgColor","navMessage","score","highScore","Character","onClick","e","clickEvent","target","src","name","alt","Container","shake","characters","map","a","i","key","Footer","Banner","images","batman_1","blackpanther_1","captain_america1","captain_america2","captain_america3","captain_america4","hulk_1","ironman_1","ironman_2","ironman_3","ironman_4","spiderman_1","spiderman_2","thore_1","ClickyGame","state","allCharacters","shuffleArray","wasClicked","checkClicked","bind","newArr","slice","shuffleArr","length","push","splice","Math","floor","random","clickedElem","prevState","this","shuffled","includes","setState","setTimeout","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e0888fd7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/batman_1.3abb3ad4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/blackpanther_1.830795db.jpg\";","module.exports = __webpack_public_path__ + \"static/media/captain_america1.488da7fc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/captain_america2.6d54c873.jpg\";","module.exports = __webpack_public_path__ + \"static/media/captain_america3.e2907ebb.png\";","module.exports = __webpack_public_path__ + \"static/media/captain_america4.f3ab549a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hulk_1.a543ce95.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ironman_1.7500594d.png\";","module.exports = __webpack_public_path__ + \"static/media/ironman_2.549819ce.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ironman_3.a187d551.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ironman_4.77752f34.jpg\";","module.exports = __webpack_public_path__ + \"static/media/spiderman_1.0384648b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/spiderman_2.1171630c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/thore_1.cf4cc845.jpg\";","import React from 'react';\nimport './Navbar.css';\n\nconst Navbar = props => (\n  <div className=\"navbar \">\n    <div>Clicky Game</div>\n    <div className={props.navMsgColor}>{props.navMessage}</div>\n    <div>\n      Score: {props.score} <span className=\"pipe\">|</span> High Score: {props.highScore}\n    </div>\n  </div>\n);\n\nexport default Navbar;\n","import React from 'react';\nimport './Character.css';\n\n\n\n\nconst Character = props => (\n  <div className=\"card\" onClick={e => props.clickEvent(e.target.src)}>\n    <img className=\"card-img-top card-height\" src={props.name} alt=\"\" />\n  </div>\n);\n\nexport default Character;\n","import React from 'react';\nimport './Container.css';\nimport Character from '../Character';\n\nconst Container = props => (\n  // loops through\n  <div\n    className={\n      props.shake\n        ? 'container d-flex flex-wrap justify-content-center shake'\n        : 'container d-flex flex-wrap justify-content-center'\n    }\n  >\n    {props.characters.map((a, i) => <Character name={a} key={i} clickEvent={props.clickEvent} />)}\n  </div>\n);\n\nexport default Container;\n","import React from 'react';\nimport './Footer.css';\n\nconst Footer = () => <div className=\"footer text-center\">Trevor Johnson</div>;\n\nexport default Footer;\n","import React from 'react';\nimport './Banner.css';\n\nconst Banner = () => (\n  <div className=\"banner text-center d-flex align-items-center justify-content-center\">\n    <p className=\"m-0\">Click on an image to earn points, but don't click on any more than once!</p>\n  </div>\n);\n\nexport default Banner;\n","import batman_1 from './images/batman_1.jpg';\r\nimport blackpanther_1 from './images/blackpanther_1.jpg';\r\nimport captain_america1 from './images/captain_america1.jpg';\r\nimport captain_america2 from './images/captain_america2.jpg';\r\nimport captain_america3 from './images/captain_america3.png';\r\nimport captain_america4 from './images/captain_america4.jpg'; \r\nimport hulk_1 from './images/hulk_1.jpg';\r\nimport ironman_1 from './images/ironman_1.png';\r\nimport ironman_2 from './images/ironman_2.jpg';\r\nimport ironman_3 from './images/ironman_3.jpg';\r\nimport ironman_4 from './images/ironman_4.jpg';\r\nimport spiderman_1 from './images/spiderman_1.jpg';\r\nimport spiderman_2 from './images/spiderman_2.jpg';\r\nimport thore_1 from './images/thore_1.jpg'; \r\n\r\n\r\nconst images = [\r\n    batman_1,\r\n    blackpanther_1,\r\n    captain_america1,\r\n    captain_america2,\r\n    captain_america3,\r\n    captain_america4,\r\n    hulk_1,\r\n    ironman_1,\r\n    ironman_2,\r\n    ironman_3,\r\n    ironman_4,\r\n    spiderman_1,\r\n    spiderman_2,\r\n    thore_1\r\n];\r\n\r\nexport default images;","import React, { Component } from 'react';\nimport Navbar from './Navbar';\nimport Container from './Container';\nimport Footer from './Footer';\nimport Banner from './Banner';\nimport images from '../images';\n\nclass ClickyGame extends Component {\n  state = {\n    score: 0,\n    highScore: 0,\n\n    \n    navMsgColor: '',\n\n    // contains intro, success, and failure message\n    navMessage: 'Click an image to begin!',\n\n    // contains an array of image urls\n    allCharacters: this.shuffleArray(),\n\n    // will track  each clicked element.\n    wasClicked: [],\n\n    // shakes the container on an incorrect guess if set to true\n    shake: false\n  };\n\n  // binds the current this context to checkClicked to have access to the current state\n  // when passed down to the Character component\n  clickEvent = this.checkClicked.bind(this);\n\n  // used to shuffle the array of images when the DOM loads, and when an image is clicked\n  shuffleArray() {\n    // creates a copy of the current characters array to modify it by value, and not by reference\n    const newArr = images.slice();\n\n    // will store the shuffled array\n    const shuffleArr = [];\n\n    // each loop through an index gets spliced from newArr, reducing its length\n    // gets a random index based off the current length of newArr\n    // splices the value from newArr, and pushes it to shuffleArr\n    while (newArr.length > 0) {\n      shuffleArr.push(newArr.splice(Math.floor(Math.random() * newArr.length), 1)[0]);\n    }\n\n    return shuffleArr;\n  }\n\n  checkClicked(clickedElem) {\n    // creates a copy of the wasClicked array to modify it by value, and not by reference. wasClicked stores all previous clicked images\n    const prevState = this.state.wasClicked.slice();\n\n    // shuffles the images\n    const shuffled = this.shuffleArray();\n\n    // tracks score\n    let score = this.state.score;\n    let highScore = this.state.highScore;\n\n    // if the clicked item is not in wasClicked, then it hasn't been clicked and the score is increased\n    if (!this.state.wasClicked.includes(clickedElem)) {\n      // if score and highScore are the same, then there is a new highScore value\n      if (score === highScore) {\n        score++;\n        highScore++;\n\n        // if they are not equal, then only increase the score value\n      } else {\n        score++;\n      }\n\n      // adds the clicked item to wasClicked to track that it has been clicked\n      prevState.push(clickedElem);\n    }\n\n    // resets the current score if the same element was clicked twice\n    if (this.state.wasClicked.includes(clickedElem)) {\n      let score = 0;\n      return this.setState({\n        score: score,\n        highScore: highScore,\n        navMsgColor: 'incorrect',\n        navMessage: 'Incorrect guess!',\n        allCharacters: shuffled,\n        wasClicked: [],\n        shake: true\n      });\n    }\n\n    // if this runs, then the same element has not been clicked twice and the score is increased\n    this.setState({\n      score: score,\n      highScore: highScore,\n      navMsgColor: 'correct',\n      navMessage: 'You Guessed Correctly!',\n      allCharacters: shuffled,\n      wasClicked: prevState,\n      shake: false\n    });\n\n    // removes the green correct indicator on a successful click after .5s to re-render the class on each success\n    return setTimeout(() => this.setState({ navMsgColor: '' }), 500);\n  }\n\n  // renders score to the navbar.\n  // passes the randomized state.allCharacters array to Container to create a Character component for each image.\n  // passes the this.checkClicked down to container to pass to each Character component to be used for the click event.\n  render() {\n    const state = this.state;\n    return (\n      <div>\n        <Navbar\n          score={state.score}\n          highScore={state.highScore}\n          navMessage={state.navMessage}\n          navMsgColor={state.navMsgColor}\n        />\n        <Banner />\n        <Container\n          shake={state.shake}\n          characters={state.allCharacters}\n          clickEvent={this.clickEvent}\n        />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default ClickyGame;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ClickyGame from './components/ClickyGame';\nimport './index.css';\n\nReactDOM.render(<ClickyGame />, document.getElementById('root'));\n"],"sourceRoot":""}